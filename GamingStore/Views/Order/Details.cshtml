@model Order
@{
    ViewData["Title"] = $"Order #{Model.Id} Details";
}

<div class="container py-4 mb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold text-light"><i class="bi bi-receipt me-2"></i>Order #@Model.Id</h2>
            <span class="text-muted">Placed on @Model.OrderDate.ToString("MMM dd, yyyy hh:mm tt")</span>
        </div>
        <span class="badge @GetStatusBadgeClass(Model.Status) fs-6 px-3 py-2 rounded-pill">
            @Model.Status
        </span>
    </div>

    <div class="row g-4">
        <div class="col-lg-8">
            <div class="card bg-dark border-secondary h-100">
                <div class="card-header bg-secondary">
                    <h5 class="mb-0 text-light"><i class="bi bi-cart-check me-2"></i>Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-dark table-hover mb-0">
                            <thead>
                                <tr class="table-secondary">
                                    <th class="ps-4 text-light">Product</th>
                                    <th class="text-end text-light">Price</th>
                                    <th class="text-end text-light">Qty</th>
                                    <th class="text-end pe-4 text-light">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    var mainImage = item.Product.Images.FirstOrDefault()?.ImageUrl ?? "/images/no-image.png";
                                    <tr>
                                        <td class="ps-4">
                                            <div class="d-flex align-items-center">
                                                <img src="@mainImage" alt="@item.Product.Name" class="me-3 rounded" style="width: 60px; height: 60px; object-fit: cover;">
                                                <div>
                                                    <h6 class="mb-0 text-light">@item.Product.Name</h6>
                                                    <small class="text-muted">@item.Product.Category</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-end text-light">
                                            @{
                                                var displayPrice = item.Product.IsOnSale && item.Product.DiscountPercentage.HasValue
                                                ? item.Price * (1 - (item.Product.DiscountPercentage.Value / 100m))
                                                : item.Price;
                                                @displayPrice.ToString("C")
                                            }
                                        </td>
                                        <td class="text-end text-light">@item.Quantity</td>
                                        <td class="text-end fw-bold pe-4 text-light">
                                            @((displayPrice * item.Quantity).ToString("C"))
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-active">
                                    <td colspan="3" class="text-end fw-bold ps-4 text-light">Subtotal</td>
                                    <td class="text-end fw-bold pe-4 text-light">@Model.Subtotal.ToString("C")</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end fw-bold ps-4 text-light">Tax (10%)</td>
                                    <td class="text-end fw-bold pe-4 text-light">@Model.Tax.ToString("C")</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end fw-bold ps-4 text-light">Delivery Fee</td>
                                    <td class="text-end fw-bold pe-4 text-light">@Model.DeliveryFee.ToString("C")</td>
                                </tr>
                                <tr class="table-active">
                                    <td colspan="3" class="text-end fw-bold ps-4 text-light">Total</td>
                                    <td class="text-end fw-bold pe-4 text-light">@Model.Total.ToString("C")</td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card bg-dark border-secondary h-100">
                <div class="card-header bg-secondary">
                    <h5 class="mb-0 text-light"><i class="bi bi-info-circle me-2"></i>Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="mb-4">
                        <h6 class="fw-bold text-light"><i class="bi bi-person me-2"></i>Customer Information</h6>
                        <p class="text-light mb-1"><strong>Name:</strong> @Model.FullName</p>
                        <p class="text-light mb-1"><strong>Phone:</strong> @Model.PhoneNumber</p>
                        <p class="text-light mb-1"><strong>Email:</strong> @Model.User.Email</p>
                        <p class="text-light mb-0"><strong>Address:</strong> @Model.Address, @Model.City</p>
                    </div>

                    <div class="mb-4">
                        <h6 class="fw-bold text-light"><i class="bi bi-credit-card me-2"></i>Payment Method</h6>
                        <p class="text-light mb-0">@Model.PaymentMethod</p>
                    </div>

                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <form asp-action="UpdateStatus" method="post" class="mb-4">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <div class="mb-3">
                                <h6 class="fw-bold text-light"><i class="bi bi-arrow-repeat me-2"></i>Update Status</h6>
                                <select name="status" class="form-select bg-dark text-light border-secondary">
                                    <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                                    <option value="Processing" selected="@(Model.Status == "Processing")">Processing</option>
                                    <option value="Completed" selected="@(Model.Status == "Completed")">Completed</option>
                                    <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="bi bi-save me-2"></i>Update Status
                            </button>
                        </form>
                    }

                    @if (Model.Status == "Pending")
                    {
                        <form asp-action="Cancel" method="post">
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-outline-danger w-100" onclick="return confirm('Are you sure you want to cancel this order?')">
                                <i class="bi bi-x-circle me-2"></i>Cancel Order
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status) => status switch
    {
        "Pending" => "bg-warning text-dark",
        "Processing" => "bg-primary",
        "Completed" => "bg-success",
        "Cancelled" => "bg-secondary",
        _ => "bg-dark"
    };
}