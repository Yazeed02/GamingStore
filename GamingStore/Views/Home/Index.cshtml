@model IEnumerable<Product>
@using System.ComponentModel.DataAnnotations
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Home";
}

<!-- Search Bar -->
<div class="container mb-5 mt-3">
    <div class="row justify-content-center">
        <div class="col-6 col-sm-10 position-relative">
            <input type="text" class="form-control" id="search-bar" placeholder="Search products...">
            <div id="live-search-results" class="list-group"></div>
        </div>
    </div>
</div>

<!-- Product Slider -->
<div id="product-slider" class="carousel slide my-4 mb-5" data-bs-ride="carousel">
    <div class="carousel-inner rounded-3" style="max-height: 400px;">
        <div class="carousel-item active">
            <img src="https://xboxwire.thesourcemediaassets.com/sites/2/2024/06/Consoles-eb36182249206cefa827.jpg" class="d-block w-100 h-100" alt="Xbox">
            <div class="carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded-3 p-2">
                <h5 class="m-0">Xbox Consoles</h5>
            </div>
        </div>
        <div class="carousel-item">
            <img src="https://static1.dualshockersimages.com/wordpress/wp-content/uploads/wm/2023/11/playstation-consoles-feature.jpg" class="d-block w-100 h-100" alt="PlayStation">
            <div class="carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded-3 p-2">
                <h5 class="m-0">PlayStation Series</h5>
            </div>
        </div>
        <div class="carousel-item">
            <img src="https://img.freepik.com/free-photo/view-illuminated-neon-gaming-keyboard-setup-controller_23-2149529367.jpg?semt=ais_hybrid&w=740" class="d-block w-100 h-100" alt="Components">
            <div class="carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded-3 p-2">
                <h5 class="m-0">Gaming Accessories</h5>
            </div>
        </div>
        <div class="carousel-item">
            <img src="https://www.slashgear.com/img/gallery/12-important-things-to-consider-before-buying-a-gaming-pc/intro-1654286079.jpg" class="d-block w-100 h-100" alt="Gaming PC">
            <div class="carousel-caption d-none d-md-block bg-dark bg-opacity-50 rounded-3 p-2">
                <h5 class="m-0">Gaming PCs</h5>
            </div>
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#product-slider" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#product-slider" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>

<!-- Featured Products -->
<div class="container mb-5">
    <div class="row mb-3">
        <div class="col-12">
            <h3>Featured Products</h3>
        </div>
    </div>

    @if (Model.Any(p => p.IsFeatured))
    {
        <div class="row g-4">
            @foreach (var product in Model.Where(p => p.IsFeatured).Take(5))
            {
                <div class="col-6 col-sm-4 col-md-3 col-lg-2-4 mb-3">
                    <div class="card h-100 bg-dark text-light product-card">
                        <img src="@((product.Images?.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.png"))" class="card-img-top product-image" alt="@product.Name" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">
                                @{
                                    var categoryDisplay = product.Category
                                    .GetType()
                                    .GetMember(product.Category.ToString())[0]
                                    .GetCustomAttributes(typeof(DisplayAttribute), false)
                                    .Cast<DisplayAttribute>()
                                    .FirstOrDefault()?.Name ?? product.Category.ToString();
                                }
                                @categoryDisplay
                            </p>
                            <div>
                                @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                {
                                    <div>
                                        <span class="text-decoration-line-through text-muted me-2">@product.Price.ToString("C")</span>
                                        <span class="fw-bold text-white">
                                            @((product.Price * (100 - product.DiscountPercentage.Value) / 100).ToString("C"))
                                        </span>
                                    </div>
                                    <div class="mt-1">
                                        <span class="badge me-2 bg-custom">@product.DiscountPercentage% OFF</span>
                                        <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red")">
                                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    <div class="fw-bold">
                                        @product.Price.ToString("C")
                                        <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red") mx-2">
                                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-light w-100">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center text-muted my-3">
            <h5>No featured products available.</h5>
        </div>
    }
</div>

<!-- Categories -->
<div class="container">
    <div class="row mt-5">
        <div class="col-12">
            <h3>Categories</h3>
        </div>

        @foreach (var category in (List<ProductCategory>)ViewBag.Categories)
        {
            var categoryName = Enum.GetName(typeof(ProductCategory), category);
            var displayName = category.GetType()
            .GetMember(category.ToString())[0]
            .GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .FirstOrDefault()?.Name ?? categoryName;

            <div class="col-md-3 col-sm-6 mb-4 mt-2">
                <div class="card h-100 bg-secondary text-white border-0 category-card">
                    <div class="card-body text-center">
                        <h5 class="card-title">@displayName</h5>
                        <a asp-controller="Product" asp-action="Browse" asp-route-name="@category.ToString()" class="btn btn-outline-light mt-2">View Products</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- On Sale Products -->
<div class="container mt-5 mb-5">
    <div class="row mb-4">
        <div class="col-12">
            <h3 class="text-danger">On Sale</h3>
        </div>
    </div>

    @if (Model.Any(p => p.IsOnSale && p.DiscountPercentage.HasValue))
    {
        <div class="row g-4">
            @foreach (var product in Model.Where(p => p.IsOnSale && p.DiscountPercentage.HasValue).Take(5))
            {
                <div class="col-6 col-sm-4 col-md-3 col-lg-2-4 mb-3">
                    <div class="card h-100 bg-dark text-light product-card">
                        <img src="@((product.Images?.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.png"))" class="card-img-top product-image" alt="@product.Name" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">
                                @{
                                    var categoryDisplay = product.Category
                                    .GetType()
                                    .GetMember(product.Category.ToString())[0]
                                    .GetCustomAttributes(typeof(DisplayAttribute), false)
                                    .Cast<DisplayAttribute>()
                                    .FirstOrDefault()?.Name ?? product.Category.ToString();
                                }
                                @categoryDisplay
                            </p>
                            <div>
                                <div>
                                    <span class="text-decoration-line-through text-muted me-2">@product.Price.ToString("C")</span>
                                    <span class="fw-bold text-white">
                                        @((product.Price * (100 - product.DiscountPercentage.Value) / 100).ToString("C"))
                                    </span>
                                </div>
                                <div class="mt-1">
                                    <span class="badge bg-custom me-2">@product.DiscountPercentage% OFF</span>
                                    <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red")">
                                        @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-light w-100">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center text-muted mb-5">
            <h5>No products on sale at the moment.</h5>
        </div>
    }
</div>

<!-- Toast for Success -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
    <div id="toast-success" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">@TempData["MessageSent"]</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* General Styles */
        .product-card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid #444;
            border-radius: 12px;
            overflow: hidden;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            }

        .product-image {
            width: 100%;
            height: 200px;
            object-fit: scale-down;
            background-color: white;
            border-bottom: 1px solid #444;
        }

        .category-card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid #880000;
            background-color: #1c1c1c;
            border-radius: 12px;
        }

            .category-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            }

        /* Improved Product Slider Styles */
        #product-slider {
            max-width: 800px; /* Reduced from 1200px */
            margin: 1rem auto;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        }

            #product-slider .carousel-inner {
                border-radius: 8px;
                max-height: 400px; /* Fixed height */
            }

            #product-slider .carousel-item {
                height: 400px; /* Fixed height instead of vh */
            }

            #product-slider img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                object-position: center;
            }

        .carousel-caption {
            right: auto;
            left: 5%;
            bottom: 10%;
            padding: 0.5rem 1rem;
            background-color: rgba(0, 0, 0, 0.6);
        }

            .carousel-caption h5 {
                font-size: 1.2rem;
                font-weight: 500;
            }

        /* Smaller controls */
        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            width: 30px;
            height: 30px;
            background-size: 50%;
        }
        /* Search Results Styles */
        #live-search-results {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 9999;
            background-color: #2a2a2a;
            border: 1px solid #444;
            border-top: none;
            border-radius: 0 0 0.25rem 0.25rem;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        }

            #live-search-results a {
                padding: 10px 15px;
                color: white;
                text-decoration: none;
                display: flex;
                align-items: center;
                gap: 10px;
                transition: background 0.2s;
            }

                #live-search-results a:hover {
                    background-color: #444;
                    color: white;
                }

        /* Utility Classes */
        .bg-custom {
            color: white;
            background-color: #28a745;
        }

        .bg-custom-red {
            color: white;
            background-color: #881515;
        }

        .col-lg-2-4 {
            flex: 0 0 auto;
            width: 20%;
        }

        /* Responsive Adjustments */
        @@media (max-width: 768px) {
            #product-slider .carousel-inner, #product-slider .carousel-item

        {
            max-height: 300px;
            height: 300px;
        }

        .carousel-caption {
            bottom: 5%;
        }

            .carousel-caption h5 {
                font-size: 1rem;
            }

        }

        @@media (max-width: 576px) {
            #product-slider .carousel-inner, #product-slider .carousel-item

        {
            max-height: 250px;
            height: 250px;
        }

        .carousel-caption {
            display: none !important;
        }

        }

        @@media (max-width: 992px) {
            .col-lg-2-4

        {
            width: 50%;
        }

        .product-image {
            height: 180px;
        }

        #product-slider .carousel-item {
            height: 50vh;
        }

        .carousel-caption {
            bottom: 15%;
            padding: 1.2rem;
        }

            .carousel-caption h5 {
                font-size: 1.4rem;
            }

        }

        @@media (max-width: 768px) {
            #product-slider .carousel-item

        {
            height: 40vh;
            min-height: 280px;
        }

        .carousel-caption {
            bottom: 10%;
            padding: 1rem;
        }

            .carousel-caption h5 {
                font-size: 1.2rem;
            }

            .carousel-caption p {
                font-size: 0.9rem;
            }

        .product-image {
            height: 160px;
        }

        }

        @@media (max-width: 576px) {
            #product-slider .carousel-item

        {
            height: 35vh;
            min-height: 250px;
        }

        .carousel-caption {
            display: none !important;
        }

        .product-image {
            height: 140px;
        }

        .col-lg-2-4 {
            width: 100%;
        }

        }

        @@media (max-width: 400px) {
            #product-slider .carousel-item

        {
            height: 30vh;
        }

        .product-image {
            height: 120px;
        }

        }
    </style>
}

@section Scripts {
    <script>
        const searchInput = document.getElementById("search-bar");
        const resultsContainer = document.getElementById("live-search-results");

        searchInput.addEventListener("keyup", function () {
            const query = this.value.trim();

            if (!query) {
                resultsContainer.style.display = "none";
                resultsContainer.innerHTML = "";
                return;
            }

            fetch(`/Home/LiveSearch?query=${encodeURIComponent(query)}`)
                .then(response => response.json())
                .then(products => {
                    resultsContainer.innerHTML = "";

                    if (products.length === 0) {
                        resultsContainer.style.display = "none";
                        return;
                    }

                    const seen = new Set();

                    products.forEach(product => {
                        const title = product.name;
                        if (seen.has(title)) return;
                        seen.add(title);

                        const link = `/Product/Details/${product.id}`;
                        const image = product.imageUrl;

                        const resultItem = document.createElement("a");
                        resultItem.href = link;
                        resultItem.classList.add("list-group-item", "list-group-item-action", "d-flex", "align-items-center", "bg-dark", "text-white");

                        resultItem.innerHTML = `
                            <img src="${image}" alt="" style="height: 40px; width: 40px; object-fit: cover; margin-right: 10px; border-radius: 6px;">
                            <span>${title}</span>
                        `;

                        resultsContainer.appendChild(resultItem);
                    });

                    resultsContainer.style.display = "block";
                })
                .catch(error => {
                    console.error("Search error:", error);
                    resultsContainer.style.display = "none";
                });
        });

        document.addEventListener("click", function (e) {
            if (!e.target.closest("#search-bar") && !e.target.closest("#live-search-results")) {
                resultsContainer.style.display = "none";
            }
        });
    </script>

    <script>
        // Toast message display
        document.addEventListener('DOMContentLoaded', function () {
            var toastEl = document.getElementById('toast-success');
            if (toastEl && toastEl.textContent.trim()) {
                var toast = new bootstrap.Toast(toastEl);
                toast.show();
            }
        });
    </script>
}
