@model IEnumerable<Product>
@using System.ComponentModel.DataAnnotations

@{
    ViewData["Title"] = "Home";
}

<!-- Search Bar -->
<div class="container mb-5 mt-3">
    <div class="row justify-content-center">
        <div class="col-6 col-sm-10 position-relative">
            <input type="text" class="form-control" id="search-bar" placeholder="Search products...">
            <div id="live-search-results" class="list-group"></div>
        </div>
    </div>
</div>


<!-- Product Slider -->
<div id="product-slider" class="carousel slide mb-5 container" data-bs-ride="carousel">
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img src="https://sm.ign.com/t/ign_nordic/lists/e/every-play/every-playstation-console-a-full-history-of-release-dates_c3wc.1280.jpg" class="d-block w-100 slide-image" alt="PlayStation">
        </div>
        <div class="carousel-item">
            <img src="https://www.slashgear.com/img/gallery/12-important-things-to-consider-before-buying-a-gaming-pc/intro-1654286079.jpg" class="d-block w-100 slide-image" alt="Gaming PC">
        </div>
        <div class="carousel-item">
            <img src="https://xxboxnews.blob.core.windows.net/prod/sites/2/2024/11/New-Xbox-Series-X_S-Console-Options-Family_NoText-65586e62c31bf0eee51f.jpg" class="d-block w-100 slide-image" alt="Xbox">
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#product-slider" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#product-slider" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
    </button>
</div>

<!-- Featured Products Section -->
<div class="container mb-5">
    <div class="row mb-3">
        <div class="col-12">
            <h3>Featured Products</h3>
        </div>
    </div>

    @if (Model.Any(p => p.IsFeatured))
    {
        <div class="row g-4">
            @foreach (var product in Model.Where(p => p.IsFeatured))
            {
                <div class="col-md-4 col-lg-3 mb-3">
                    <div class="card h-100 bg-dark text-light product-card">
                        <img src="@((product.Images?.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.png"))" class="card-img-top product-image" alt="@product.Name" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">@product.Category</p>
                            <div>
                                @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                                {
                                    <div>
                                        <span class="text-decoration-line-through text-muted me-2">@product.Price.ToString("C")</span>
                                        <span class="fw-bold text-white">
                                            @((product.Price * (100 - product.DiscountPercentage.Value) / 100).ToString("C"))
                                        </span>
                                    </div>
                                    <div class="mt-1">
                                        <span class="badge me-2 bg-custom">@product.DiscountPercentage% OFF</span>
                                        <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red")">
                                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </div>
                                }
                                else
                                {
                                    <div class="fw-bold">@product.Price.ToString("C")
                                        <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red") mx-2">
                                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                        </span>
                                    </div>
                                    
                                }

                                <div class="mt-2">
                                
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-light w-100">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center text-muted">
            <h5>No featured products available.</h5>
        </div>
    }
</div>

<!-- Browse by Category Section -->
<div class="container">
    <div class="row mt-5">
        <div class="col-12">
            <h3>Categories</h3>
        </div>

        @foreach (var category in (List<ProductCategory>)ViewBag.Categories)
        {
            var categoryName = Enum.GetName(typeof(ProductCategory), category);
            var displayName = category.GetType()
            .GetMember(category.ToString())[0]
            .GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .FirstOrDefault()?.Name ?? categoryName;

            <div class="col-md-3 col-sm-6 mb-4 mt-2">
                <div class="card h-100 bg-secondary text-white border-0 category-card">
                    <div class="card-body text-center">
                        <h5 class="card-title">@displayName</h5>
                        <a asp-controller="Product" asp-action="Browse" asp-route-name="@category.ToString()" class="btn btn-outline-light mt-2">View Products</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Products on Sale Section -->
<div class="container mt-5 mb-5">
    <div class="row mb-4">
        <div class="col-12">
            <h3 class="text-danger">On Sale</h3>
        </div>
    </div>

    @if (Model.Any(p => p.IsOnSale && p.DiscountPercentage.HasValue))
    {
        <div class="row g-4">
            @foreach (var product in Model.Where(p => p.IsOnSale && p.DiscountPercentage.HasValue))
            {
                <div class="col-md-4 col-lg-3 mb-3">
                    <div class="card h-100 bg-dark text-light product-card">
                        <img src="@((product.Images?.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.png"))" class="card-img-top product-image" alt="@product.Name" />
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">@product.Category</p>
                            <div>
                                <div>
                                    <span class="text-decoration-line-through text-muted me-2">@product.Price.ToString("C")</span>
                                    <span class="fw-bold text-white">
                                        @((product.Price * (100 - product.DiscountPercentage.Value) / 100).ToString("C"))
                                    </span>
                                </div>
                                <div class="mt-1">
                                    <span class="badge bg-custom me-2">@product.DiscountPercentage% OFF</span>
                                    <span class="badge @(product.Stock > 0 ? "bg-custom" : "bg-custom-red")">
                                        @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-0">
                            <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn btn-outline-light w-100">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center text-muted">
            <h5>No products on sale at the moment.</h5>
        </div>
    }
</div>
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
    <div id="toast-success" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                @TempData["MessageSent"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid #444;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            }

        .product-image {
            height: 200px;
            object-fit: scale-down;
            border-bottom: 1px solid #444;
            border-radius: 12px;
        }

        .slide-image {
            object-fit: scale-down;
            height: 100%;
            width: 100%;
            border-radius: 15%;
        }

        .category-card {
            transition: transform 0.3s, box-shadow 0.3s;
            border: 1px solid #444;
            background-color: #1c1c1c;
        }

            .category-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            }

        #product-slider .carousel-item {
            height: 400px;
            position: relative;
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: rgba(0, 0, 0, 0.5);
        }

        #live-search-results {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 9999;
            background-color: white;
            border: 1px solid #ccc;
            border-top: none;
            border-radius: 0 0 0.25rem 0.25rem;
            max-height: 300px;
            overflow-y: auto;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

            #live-search-results a {
                padding: 10px 15px;
                color: white
                text-decoration: none;
                display: flex;
                align-items: center;
                gap: 10px;
                transition: background 0.2s;
            }

                #live-search-results a:hover {
                    background-color: #555555;
                    color: white;
                }


        @@media (max-width: 768px) {
            .slide-image

        {
            height: auto;
        }

        .product-image {
            height: 150px;
        }

        }
        .bg-custom {
            color: white;
            background-color: #28a745;
        }

        .bg-custom-red {
            color: white;
            background-color: #881515;
        }
    </style>
}

@section Scripts {
    <script>
        const searchInput = document.getElementById("search-bar");
        const resultsContainer = document.getElementById("live-search-results");

        searchInput.addEventListener("keyup", function () {
            const query = this.value.trim().toLowerCase();
            resultsContainer.innerHTML = "";

            if (!query) {
                resultsContainer.style.display = "none";
                return;
            }

            const seen = new Set();
            let found = false;

            const cards = document.querySelectorAll(".product-card");

            cards.forEach(card => {
                const titleEl = card.querySelector(".card-title");
                const title = titleEl?.innerText.toLowerCase();

                if (title && title.includes(query) && !seen.has(title)) {
                    seen.add(title);

                    const link = card.querySelector("a")?.getAttribute("href");
                    const image = card.querySelector("img")?.getAttribute("src");

                    const resultItem = document.createElement("a");
                    resultItem.href = link;
                    resultItem.classList.add("list-group-item", "list-group-item-action", "d-flex", "align-items-center");

                    resultItem.innerHTML = `
                        <img src="${image}" alt="" style="height: 40px; width: 40px; object-fit: cover; margin-right: 10px; border-radius: 6px;">
                        <span>${titleEl.innerText}</span>
                    `;

                    resultsContainer.appendChild(resultItem);
                    found = true;
                }
            });

            resultsContainer.style.display = found ? "block" : "none";
        });

        document.addEventListener("click", function (e) {
            if (!e.target.closest("#search-bar") && !e.target.closest("#live-search-results")) {
                resultsContainer.style.display = "none";
            }
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var toastEl = document.getElementById('toast-success');
            if (toastEl && toastEl.textContent.trim()) {
                var toast = new bootstrap.Toast(toastEl);
                toast.show();
            }
        });
    </script>
}
