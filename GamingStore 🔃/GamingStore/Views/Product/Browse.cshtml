@model List<GamingStore.Models.Product>

@{
    ViewData["Title"] = ViewBag.CategoryName;
}

<style>
    .filter-container {
        margin-bottom: 1.5rem;
    }

    .filter-dropdown {
        background-color: inherit;
        color: white;
        border: 1px solid #444;
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
        height: auto;
        min-width: 180px;
    }

        .filter-dropdown:hover {
            border-color: #880000;
        }

        .filter-dropdown:focus {
            border-color: #880000;
            box-shadow: 0 0 0 0.25rem rgba(136, 0, 0, 0.25);
        }

        .filter-dropdown option {
            background-color: #222;
            color: white;
            padding: 0.5rem;
        }

            .filter-dropdown option:hover {
                background-color: #880000 !important;
                color: white !important;
            }

    .product-card {
        background-color: #222;
        color: white;
        transition: transform 0.2s;
        border: none;
        margin-bottom: 1.5rem;
    }

        .product-card:hover {
            transform: scale(1.02);
            box-shadow: 0 0 15px rgba(136, 0, 0, 0.3);
        }

    .product-image {
        height: 180px;
        object-fit: cover;
    }

    .category-badge {
        background-color: #880000;
    }
</style>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewBag.CategoryName</h1>
        <span class="badge bg-primary">@Model.Count products</span>
    </div>
    <div class="filter-container">
        <form asp-action="Browse" method="get" id="filterForm">
            @{
                var selectedSort = Context.Request.Query["sortOrder"].ToString();
            }
            <select name="sortOrder" class="form-select filter-dropdown" id="sortSelect">
                <option value="">Sort By</option>
                <option value="name" selected="@(selectedSort == "name")">Name (A-Z)</option>
                <option value="priceAsc" selected="@(selectedSort == "priceAsc")">Price (Low → High)</option>
                <option value="priceDesc" selected="@(selectedSort == "priceDesc")">Price (High → Low)</option>
                <option value="newest" selected="@(selectedSort == "newest")">Newest</option>
            </select>
        </form>
    </div>

    <div class="row" id="productsContainer">
        @foreach (var product in Model)
        {
            <div class="col-6 col-md-4 col-lg-3">
                <div class="card h-100 product-card">
                    <img src="@(product.Images?.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.png")"
                         class="card-img-top product-image" alt="@product.Name" />
                    <div class="card-body d-flex flex-column">
                        <h6 class="card-title">@product.Name</h6>
                        <span class="badge category-badge mb-2">
                            @product.Category.GetDisplayName()
                        </span>
                        <div class="mb-2">
                            @if (product.IsOnSale && product.DiscountPercentage.HasValue)
                            {
                                var discountedPrice = product.Price * (1 - (product.DiscountPercentage.Value / 100m));
                                <div>
                                    <span class="text-decoration-line-through text-muted small me-2">@product.Price.ToString("C")</span>
                                    <span class="fw-bold text-white">@discountedPrice.ToString("C")</span>
                                </div>
                                <span class="badge bg-danger mt-1">@product.DiscountPercentage% OFF</span>
                            }
                            else
                            {
                                <span class="fw-bold">@product.Price.ToString("C")</span>
                            }
                        </div>
                        <span class="badge @(product.Stock > 0 ? "bg-success" : "bg-danger") mb-2">
                            @(product.Stock > 0 ? "In Stock" : "Out of Stock")
                        </span>
                        <div class="mt-auto">
                            <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-outline-light w-100 btn-sm">View Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center">No products found in this category.</div>
    }
</div>

@section Scripts {
    <script>
        document.getElementById('sortSelect').addEventListener('change', function() {
            document.getElementById('filterForm').submit();
        });
    </script>
}